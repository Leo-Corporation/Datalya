<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Datalya" xml:space="preserve">
    <value>Datalya</value>
  </data>
  <data name="Creator" xml:space="preserve">
    <value>Creator</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="CloseDataBase" xml:space="preserve">
    <value>Close database</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteAll" xml:space="preserve">
    <value>Delete all</value>
  </data>
  <data name="CreatorDesc" xml:space="preserve">
    <value>Create your own database by using Blocks.</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="Multichoices" xml:space="preserve">
    <value>Multichoices</value>
  </data>
  <data name="SingleChoice" xml:space="preserve">
    <value>Single choice</value>
  </data>
  <data name="Selector" xml:space="preserve">
    <value>Selector</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="PropertiesDesc" xml:space="preserve">
    <value>Block properties.</value>
  </data>
  <data name="Configure" xml:space="preserve">
    <value>Configure</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Placeholder" xml:space="preserve">
    <value>Placeholder text</value>
  </data>
  <data name="Choices" xml:space="preserve">
    <value>Choices</value>
  </data>
  <data name="ChoicePerLine" xml:space="preserve">
    <value>A choice per line.</value>
  </data>
  <data name="NothingToShow" xml:space="preserve">
    <value>Nothing to show</value>
  </data>
  <data name="NothingToShowMsg" xml:space="preserve">
    <value>There is no informations to show. Please select or create a block to see its informations here.</value>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>An error has occured.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="AddElement" xml:space="preserve">
    <value>Add an element</value>
  </data>
  <data name="AddElementDesc" xml:space="preserve">
    <value>Add an element to the database.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="DeleteAllMsg" xml:space="preserve">
    <value>All entries of the database are going to be deleted. This operation is irreversible. Do you want to continue?</value>
  </data>
  <data name="DataBaseEmptyDeleteMsg" xml:space="preserve">
    <value>The database is empty, there is nothing to delete.</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="EditElement" xml:space="preserve">
    <value>Edit an element</value>
  </data>
  <data name="EditElementDesc" xml:space="preserve">
    <value>Edit an element of the database.</value>
  </data>
  <data name="EditShort" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="CantEditItemDeletedMsg" xml:space="preserve">
    <value>Cannot edit an item that was deleted.</value>
  </data>
  <data name="DatalyaDataBase" xml:space="preserve">
    <value>DatalyaDataBase</value>
  </data>
  <data name="DatalyaFile" xml:space="preserve">
    <value>Datalya DataBase File</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>The specified file doesn't exist.</value>
  </data>
  <data name="CannotSaveDataBase" xml:space="preserve">
    <value>Cannot save the database.</value>
  </data>
  <data name="AllFiles" xml:space="preserve">
    <value>All Files</value>
  </data>
  <data name="CloseDBConfirmMsg" xml:space="preserve">
    <value>Are you sure you want to close the database? Your data will be saved.</value>
  </data>
  <data name="ExportToExcel" xml:space="preserve">
    <value>Export to Excel</value>
  </data>
  <data name="Updates" xml:space="preserve">
    <value>Updates</value>
  </data>
  <data name="CheckUpdate" xml:space="preserve">
    <value>Check update</value>
  </data>
  <data name="Licenses" xml:space="preserve">
    <value>Licenses</value>
  </data>
</root>