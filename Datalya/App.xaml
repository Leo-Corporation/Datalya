<Application x:Class="Datalya.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:Datalya"
			 StartupUri="MainWindow.xaml">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="\Themes\Light.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="FocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
			<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
			<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#0054e6"/>
			<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#0054e6"/>
			<SolidColorBrush x:Key="Button.Pressed.Background" Color="#0049c7"/>
			<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
			<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
			<Style x:Key="FocusVisual3">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="OptionMarkFocusVisual1">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="RadioButton.Static.Background" Color="{Binding Source={StaticResource Background1}}"/>
			<SolidColorBrush x:Key="RadioButton.Static.Border" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
			<SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
			<SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
			<SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
			<SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
			<SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
			<SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="{Binding Source={StaticResource AccentColor}}"/>
			<Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
				<Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
				<Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RadioButton}">
							<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
									<Grid x:Name="markGrid" Margin="2">
										<Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinHeight="6" MinWidth="6" Opacity="0"/>
									</Grid>
								</Border>
								<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasContent" Value="true">
									<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual1}"/>
									<Setter Property="Padding" Value="4,-1,0,0"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
									<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
									<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
									<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="{x:Null}">
									<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="FocusVisual2">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="OptionMarkFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
			<SolidColorBrush x:Key="OptionMark.Static.Border" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{Binding Source={StaticResource AccentColor}}"/>
			<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
			<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
			<Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
				<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
				<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="4">
									<Grid x:Name="markGrid">
										<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="White" Margin="1" Opacity="0" Stretch="None"/>
										<Rectangle x:Name="indeterminateMark" Fill="White" Margin="2" Opacity="0"/>
									</Grid>
								</Border>
								<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasContent" Value="true">
									<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
									<Setter Property="Padding" Value="4,-1,0,0"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
									<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
									<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
									<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
									<Setter Property="Background" TargetName="markGrid" Value="{Binding Source={StaticResource AccentColor}}"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="{x:Null}">
									<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
									<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
			<Style x:Key="RegularTextBoxStyle" TargetType="{x:Type TextBox}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
				<Setter Property="AllowDrop" Value="true"/>
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" CornerRadius="5,5,5,5">
								<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Opacity" TargetName="border" Value="0.56"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
							<Condition Property="IsSelectionActive" Value="false"/>
						</MultiTrigger.Conditions>
						<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
					</MultiTrigger>
				</Style.Triggers>
			</Style>
			<SolidColorBrush x:Key="Button.Pressed.Border" Color="#0049c7"/>
			<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
			<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
			<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
			<Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
				<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
				<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="5,5,5,5">
								<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsDefaulted" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
									<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="FocusVisual1">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
			<SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
			<SolidColorBrush x:Key="Button.MouseOver.Background1" Color="{Binding Source={StaticResource Background2}}"/>
			<SolidColorBrush x:Key="Button.MouseOver.Border1" Color="{Binding Source={StaticResource Background2}}"/>
			<SolidColorBrush x:Key="Button.Pressed.Background1" Color="{Binding Source={StaticResource Background2}}"/>
			<SolidColorBrush x:Key="Button.Pressed.Border1" Color="{Binding Source={StaticResource Background2}}"/>
			<SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
			<SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
			<SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
			<Style x:Key="RegularButtonStyle" TargetType="{x:Type Button}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
				<Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
				<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="5,5,5,5">
								<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsDefaulted" Value="true">
									<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
									<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
